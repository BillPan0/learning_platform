version: '3'

networks:
   zk-net:
        external: true
services:
  zoo1:
    image: zookeeper:3.8
    container_name: zoo1
    restart: always       #auto start when power on
    hostname: zoo1
    ports:
      - 12181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181   # 3888 is port for selecting leader
    healthcheck:
      test: ["CMD","nc","-zv","localhost","2181"]
      interval: 3s
      timeout: 3s
      retries: 3
    networks:
      - zk-net
  zoo2:
    image: zookeeper:3.8
    container_name: zoo2
    restart: always
    hostname: zoo2
    ports:
      - 12182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
    healthcheck:
      test: ["CMD","nc","-zv","localhost","2181"]
      interval: 3s
      timeout: 3s
      retries: 3
    networks:
      - zk-net
  zoo3:
    image: zookeeper:3.8
    container_name: zoo3
    restart: always
    hostname: zoo3
    ports:
      - 12183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
    healthcheck:
      test: ["CMD","nc","-zv","localhost","2181"]
      interval: 3s
      timeout: 3s
      retries: 3
    networks:
      - zk-net
  kafka1:
    image: 'bitnami/kafka:3.0.0'
    container_name: kafka1
    hostname: kafka1
    restart: always
    networks:
      - zk-net
    ports:
      - '19093:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zoo1:2181,zoo2:2181,zoo3:2181/kafka
      - KAFKA_BROKER_ID=1
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://192.168.170.129:19093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      zoo1:
        condition: service_healthy
      zoo2:
        condition: service_healthy
      zoo3:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 10s
  kafka2:
    image: 'bitnami/kafka:3.0.0'
    container_name: kafka2
    hostname: kafka2
    restart: always
    networks:
      - zk-net
    ports:
      - '19094:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zoo1:2181,zoo2:2181,zoo3:2181/kafka
      - KAFKA_BROKER_ID=2   
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://192.168.170.129:19094
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      zoo1:
        condition: service_healthy
      zoo2:
        condition: service_healthy
      zoo3:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 10s
  kafka3:
    image: 'bitnami/kafka:3.0.0'
    container_name: kafka3
    hostname: kafka3
    restart: always
    networks:
      - zk-net
    ports:
      - '19095:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zoo1:2181,zoo2:2181,zoo3:2181/kafka
      - KAFKA_BROKER_ID=3
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://192.168.170.129:19095
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      zoo1:
        condition: service_healthy
      zoo2:
        condition: service_healthy
      zoo3:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 10s
